#Ilislife.kv
#:kivy 1.9.1

# MyRoot:
#     BoxLayout:
#         orientation: 'horizontal'
#         MyGraph:
#             id: gp
#         MainView:

MyRoot:
    # do_default_tab: False
    # TabbedPanelItem:
    #     id: tab1
    #     text: 'Main'
    #     MainView:
    # TabbedPanelItem:
    #     id: tab2
    #     text: 'Graph'
    #     MyGraph:
    #         id: gp


<MyRoot>:
    do_default_tab: False
    TabbedPanelItem:
        id: tab1
        text: 'Main'
        MainView:
    TabbedPanelItem:
        id: tab2
        text: 'Graph'
        MyGraph:
            id: gp
    # TabbedPanelItem:
    #     id: tab3
    #     text: 'TestRandom'
    #     StoreValue:

<MainView>:
    # main_view: main_view
    BoxLayout:
        ### Indicators (top) and Buttons (bottom)
        orientation: 'vertical'
        BoxLayout:
        ### Indicators (left) and Conditions (right)
            orientation: 'horizontal'
            size_hint_y: 1
            GridLayout:
                size_hint_x: 0.5
                cols: 2
                padding: 0.1
                Label:
                    text: 'Total'
                    # size_hint_y: 0.2
                Label:
                    text: str(root.lapse_time(root.time_now))
                    # size_hint_y: 0.2
                    markup: True
                Label:
                    text: 'Remaining'
                    # size_hint_y: 0.2
                Label:
                    text: str(root.remaining_time(root.time_now))
                    # size_hint_y: 0.2
                    markup: True
                Label:
                    text: 'Seq.No,   Hold (V),    Hold (s)'
                    # size_hint_y: 0.2
                    markup: True
                Label:
                    text: root.format_seq(root.seq_now)
                    # size_hint_y: 0.2
                    markup: True

                Label:
                    # text: str(root.time_now)
                    text: 'Ve : '
                    # size_hint_y: 0.2
                Label:
                    # text: str(root.time_now)
                    text: str(root.Ve_status)+' (V)'
                    # size_hint_y: 0.2
                Label:
                    text: 'Ic : '
                    # size_hint_y: 0.2
                Label:
                    text: str(root.Ic_status)+' (V)/Rs'
                    # size_hint_y: 0.2
                Label:
                    text: 'Ig : '
                    # size_hint_y: 0.2
                Label:
                    text: str(root.Ig_status)+' (V)/Rs'
                    # size_hint_y: 0.2
            # StoreValue:
            # BoxLayout:
            #     orientation: 'vertical'
            #     size_hint_x: 0.5
            #     GridLayout:
            #         cols: 3
            #         Label:
            #             text: 'Save to:'
            #         TextInput:

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1.0, 0.1
            Button:
                text: 'Disconnect' if root.is_connected else 'Connect'
                font_size: 32
                on_press: root.on_command('connect/disconnect')
            Button:
                text: 'Stop' if root.is_countup else 'Start'
                # font_size: 16
                font_size: 32
                on_press: root.on_command('start/stop') if root.is_connected else None
            Button:
                text: 'Reset'
                # font_size: 16
                font_size: 32
                on_press: root.on_command('reset') if root.is_connected else None

<MyGraph>:
    graph_plot: graph_plot
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.8
            Graph:
                id: graph_plot
                background_color: (0.1, 0.1, 0.1, 1)
                label_options: {'color': (1, 1, 1, 0.9), 'bold': True}
                tick_color: (1, 0, 1, 1)
                border_color: (1, 0, 1, 1)
                xlabel:'Time (s)'
                ylabel:'Values'
                y_grid_label: True
                x_grid_label: True
                padding: 5
                x_ticks_major: 10
                x_grid: True
                y_grid: True
                xmin: root.graph_x_range  - root.graph_x_hist
                xmax: 0 - root.graph_x_hist
                ymin: root.graph_y_lwl
                ymax: root.graph_y_upl
                # size: self.parent.size
                # pos: self.parent.pos
            BoxLayout:
                orientation: 'vertical'
                size_hint_x: 0.05
                Label:
                    size_hint_y: 0.05
                    text: str(root.graph_y_upl)
                Button:
                    id: bt1up
                    text: '+ UPL'
                    size_hint_y: 0.2
                    on_press: root.graph_y_upl += 1
                Button:
                    id: bt1down
                    text: '- UPL'
                    size_hint_y: 0.2
                    on_press: root.ymax_down()
                Label:
                    size_hint_y: 0.05
                    text: str(root.graph_y_lwl)
                Button:
                    id: bt2up
                    text: '+ LWL'
                    size_hint_y: 0.2
                    on_press: root.ymin_up()
                Button:
                    id: bt2down
                    text: '- LWL'
                    size_hint_y: 0.2
                    on_press: root.graph_y_lwl -= 1


        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.05
            Label:
                color: (1, 0, 0, 1)
                text: 'Ve (kV)'
                size_hint_x: 0.3
            Label:
                color: (1, 0, 0, 1)
                # text: root.format_val(root.to_val[1]) if not root.to_val == [] else ''
                size_hint_x: 0.1
            Label:
                size_hint_x: 0.1
            Label:
                color: (0, 1, 0, 1)
                text: 'Ig (mV)'
                size_hint_x: 0.3
            Label:
                color: (0, 1, 0, 1)
                # text: root.format_val(root.to_val[2]) if not root.to_val == [] else ''
                size_hint_x: 0.1
            Label:
                size_hint_x: 0.1
            Label:
                color: (0, 0.5, 1, 1)
                text: 'Ic (mV)'
                size_hint_x: 0.3
            Label:
                color: (0, 0.5, 1, 1)
                # text: root.format_val(root.to_val[3])  if not root.to_val == [] else ''
                size_hint_x: 0.1

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.1
            Slider:
                id: sd1
                max: 43200
                min: 600
                step: root.graph_x_step
                value: root.graph_x_range
                on_value: root.graph_x_range = self.value
                size_hint_x: 0.9
            Label:
                text: str(root.graph_x_range)+' range'
                size_hint_x: 0.1
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.1
            Slider:
                id: sd2
                max: 0
                min: -43200
                step: root.graph_x_step
                value: root.graph_x_hist
                on_value: root.graph_x_hist = self.value
                size_hint_x: 0.9
            Label:
                text: str(root.graph_x_hist)+' hist'
                size_hint_x: 0.1
        Label:
            size_hint_y: 0.05
            text: str()
        Button:
            id: toggle_button
            text: 'Stop Chart' if root.sensorEnabled else 'Start Chart'
            size_hint_y: 0.1
            on_press: root.do_toggle()

<StoreValue>:
    sv: sv
    BoxLayout:
        Button:
            id: sv
            text: "Start make_random_data" if not root.is_random else 'Stop'
            on_press: root.start_random() if not root.is_random  else root.stop_random()
